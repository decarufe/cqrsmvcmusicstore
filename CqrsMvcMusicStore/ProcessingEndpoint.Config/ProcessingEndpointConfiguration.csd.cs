//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.261
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProcessingEndpoint.Config
{
    
    
    /// <summary>
    /// The DataBusConfig Configuration Section.
    /// </summary>
    public partial class DataBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DataBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DataBusConfigSectionName = "dataBusConfig";
        
        /// <summary>
        /// Gets the DataBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::ProcessingEndpoint.Config.DataBusConfig Instance
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.DataBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::ProcessingEndpoint.Config.DataBusConfig.DataBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.DataBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ProcessingEndpoint.Config.DataBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FileShareDataBus Property
        /// <summary>
        /// The XML name of the <see cref="FileShareDataBus"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string FileShareDataBusPropertyName = "fileShareDataBus";
        
        /// <summary>
        /// Gets or sets the FileShareDataBus.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FileShareDataBus.")]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ProcessingEndpoint.Config.FileShareDataBus FileShareDataBus
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.FileShareDataBus)(base[global::ProcessingEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName]));
            }
            set
            {
                base[global::ProcessingEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ProcessingEndpoint.Config
{
    
    
    /// <summary>
    /// The CommandBusConfig Configuration Section.
    /// </summary>
    public partial class CommandBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the CommandBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandBusConfigSectionName = "commandBusConfig";
        
        /// <summary>
        /// Gets the CommandBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::ProcessingEndpoint.Config.CommandBusConfig Instance
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.CommandBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::ProcessingEndpoint.Config.CommandBusConfig.CommandBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.CommandBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ProcessingEndpoint.Config.CommandBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CommandHandlers Property
        /// <summary>
        /// The XML name of the <see cref="CommandHandlers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandHandlersPropertyName = "commandHandlers";
        
        /// <summary>
        /// Gets or sets the CommandHandlers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The CommandHandlers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.CommandBusConfig.CommandHandlersPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public global::ProcessingEndpoint.Config.CommandHandlers CommandHandlers
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.CommandHandlers)(base[global::ProcessingEndpoint.Config.CommandBusConfig.CommandHandlersPropertyName]));
            }
            set
            {
                base[global::ProcessingEndpoint.Config.CommandBusConfig.CommandHandlersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ProcessingEndpoint.Config
{
    
    
    /// <summary>
    /// The FileShareDataBus Configuration Element.
    /// </summary>
    public partial class FileShareDataBus : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Path.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.FileShareDataBus.PathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Path
        {
            get
            {
                return ((string)(base[global::ProcessingEndpoint.Config.FileShareDataBus.PathPropertyName]));
            }
            set
            {
                base[global::ProcessingEndpoint.Config.FileShareDataBus.PathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ProcessingEndpoint.Config
{
    
    
    /// <summary>
    /// A collection of CommandHandler instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ProcessingEndpoint.Config.CommandHandler), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName=global::ProcessingEndpoint.Config.CommandHandlers.CommandHandlerPropertyName)]
    public partial class CommandHandlers : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandHandlerPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::ProcessingEndpoint.Config.CommandHandlers.CommandHandlerPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ProcessingEndpoint.Config.CommandHandlers.CommandHandlerPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ProcessingEndpoint.Config.CommandHandler)(element)).Commands;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ProcessingEndpoint.Config.CommandHandler"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ProcessingEndpoint.Config.CommandHandler"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ProcessingEndpoint.Config.CommandHandler();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ProcessingEndpoint.Config.CommandHandler this[int index]
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.CommandHandler)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> with the specified key.
        /// </summary>
        /// <param name="commands">The key of the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ProcessingEndpoint.Config.CommandHandler this[object commands]
        {
            get
            {
                return ((global::ProcessingEndpoint.Config.CommandHandler)(base.BaseGet(commands)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::ProcessingEndpoint.Config.CommandHandler add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::ProcessingEndpoint.Config.CommandHandler add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ProcessingEndpoint.Config.CommandHandler GetItemAt(int index)
        {
            return ((global::ProcessingEndpoint.Config.CommandHandler)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> with the specified key.
        /// </summary>
        /// <param name="commands">The key of the <see cref="global::ProcessingEndpoint.Config.CommandHandler"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ProcessingEndpoint.Config.CommandHandler GetItemByKey(string commands)
        {
            return ((global::ProcessingEndpoint.Config.CommandHandler)(base.BaseGet(((object)(commands)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace ProcessingEndpoint.Config
{
    
    
    /// <summary>
    /// The CommandHandler Configuration Element.
    /// </summary>
    public partial class CommandHandler : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Commands Property
        /// <summary>
        /// The XML name of the <see cref="Commands"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandsPropertyName = "commands";
        
        /// <summary>
        /// Gets or sets the Commands.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Commands.")]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ProcessingEndpoint.Config.CommandHandler.CommandsPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Commands
        {
            get
            {
                return ((string)(base[global::ProcessingEndpoint.Config.CommandHandler.CommandsPropertyName]));
            }
            set
            {
                base[global::ProcessingEndpoint.Config.CommandHandler.CommandsPropertyName] = value;
            }
        }
        #endregion
    }
}
