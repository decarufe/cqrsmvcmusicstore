//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.261
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViewModelEndpoint.Config
{
    
    
    /// <summary>
    /// The DataBusConfig Configuration Section.
    /// </summary>
    public partial class DataBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DataBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DataBusConfigSectionName = "dataBusConfig";
        
        /// <summary>
        /// Gets the DataBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::ViewModelEndpoint.Config.DataBusConfig Instance
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.DataBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::ViewModelEndpoint.Config.DataBusConfig.DataBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DataBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ViewModelEndpoint.Config.DataBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FileShareDataBus Property
        /// <summary>
        /// The XML name of the <see cref="FileShareDataBus"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string FileShareDataBusPropertyName = "fileShareDataBus";
        
        /// <summary>
        /// Gets or sets the FileShareDataBus.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FileShareDataBus.")]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ViewModelEndpoint.Config.FileShareDataBus FileShareDataBus
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.FileShareDataBus)(base[global::ViewModelEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName]));
            }
            set
            {
                base[global::ViewModelEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ViewModelEndpoint.Config
{
    
    
    /// <summary>
    /// The DomainEventBusConfig Configuration Section.
    /// </summary>
    public partial class DomainEventBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DomainEventBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainEventBusConfigSectionName = "domainEventBusConfig";
        
        /// <summary>
        /// Gets the DomainEventBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::ViewModelEndpoint.Config.DomainEventBusConfig Instance
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.DomainEventBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::ViewModelEndpoint.Config.DomainEventBusConfig.DomainEventBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DomainEventBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ViewModelEndpoint.Config.DomainEventBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DomainEventEndpointMappings Property
        /// <summary>
        /// The XML name of the <see cref="DomainEventEndpointMappings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainEventEndpointMappingsPropertyName = "domainEventEndpointMappings";
        
        /// <summary>
        /// Gets or sets the DomainEventEndpointMappings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DomainEventEndpointMappings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DomainEventBusConfig.DomainEventEndpointMappingsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public global::ViewModelEndpoint.Config.DomainEventEndpointMappings DomainEventEndpointMappings
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.DomainEventEndpointMappings)(base[global::ViewModelEndpoint.Config.DomainEventBusConfig.DomainEventEndpointMappingsPropertyName]));
            }
            set
            {
                base[global::ViewModelEndpoint.Config.DomainEventBusConfig.DomainEventEndpointMappingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ViewModelEndpoint.Config
{
    
    
    /// <summary>
    /// The FileShareDataBus Configuration Element.
    /// </summary>
    public partial class FileShareDataBus : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Path.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.FileShareDataBus.PathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Path
        {
            get
            {
                return ((string)(base[global::ViewModelEndpoint.Config.FileShareDataBus.PathPropertyName]));
            }
            set
            {
                base[global::ViewModelEndpoint.Config.FileShareDataBus.PathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ViewModelEndpoint.Config
{
    
    
    /// <summary>
    /// A collection of DomainEventEndpointMapping instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ViewModelEndpoint.Config.DomainEventEndpointMapping), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName=global::ViewModelEndpoint.Config.DomainEventEndpointMappings.DomainEventEndpointMappingPropertyName)]
    public partial class DomainEventEndpointMappings : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainEventEndpointMappingPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::ViewModelEndpoint.Config.DomainEventEndpointMappings.DomainEventEndpointMappingPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ViewModelEndpoint.Config.DomainEventEndpointMappings.DomainEventEndpointMappingPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ViewModelEndpoint.Config.DomainEventEndpointMapping)(element)).DomainEvents;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ViewModelEndpoint.Config.DomainEventEndpointMapping();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ViewModelEndpoint.Config.DomainEventEndpointMapping this[int index]
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.DomainEventEndpointMapping)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> with the specified key.
        /// </summary>
        /// <param name="domainEvents">The key of the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ViewModelEndpoint.Config.DomainEventEndpointMapping this[object domainEvents]
        {
            get
            {
                return ((global::ViewModelEndpoint.Config.DomainEventEndpointMapping)(base.BaseGet(domainEvents)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::ViewModelEndpoint.Config.DomainEventEndpointMapping add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::ViewModelEndpoint.Config.DomainEventEndpointMapping add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ViewModelEndpoint.Config.DomainEventEndpointMapping GetItemAt(int index)
        {
            return ((global::ViewModelEndpoint.Config.DomainEventEndpointMapping)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> with the specified key.
        /// </summary>
        /// <param name="domainEvents">The key of the <see cref="global::ViewModelEndpoint.Config.DomainEventEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ViewModelEndpoint.Config.DomainEventEndpointMapping GetItemByKey(string domainEvents)
        {
            return ((global::ViewModelEndpoint.Config.DomainEventEndpointMapping)(base.BaseGet(((object)(domainEvents)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace ViewModelEndpoint.Config
{
    
    
    /// <summary>
    /// The DomainEventEndpointMapping Configuration Element.
    /// </summary>
    public partial class DomainEventEndpointMapping : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DomainEvents Property
        /// <summary>
        /// The XML name of the <see cref="DomainEvents"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DomainEventsPropertyName = "domainEvents";
        
        /// <summary>
        /// Gets or sets the DomainEvents.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The DomainEvents.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DomainEventEndpointMapping.DomainEventsPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string DomainEvents
        {
            get
            {
                return ((string)(base[global::ViewModelEndpoint.Config.DomainEventEndpointMapping.DomainEventsPropertyName]));
            }
            set
            {
                base[global::ViewModelEndpoint.Config.DomainEventEndpointMapping.DomainEventsPropertyName] = value;
            }
        }
        #endregion
        
        #region Endpoint Property
        /// <summary>
        /// The XML name of the <see cref="Endpoint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EndpointPropertyName = "endpoint";
        
        /// <summary>
        /// Gets or sets the Endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Endpoint.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ViewModelEndpoint.Config.DomainEventEndpointMapping.EndpointPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Endpoint
        {
            get
            {
                return ((string)(base[global::ViewModelEndpoint.Config.DomainEventEndpointMapping.EndpointPropertyName]));
            }
            set
            {
                base[global::ViewModelEndpoint.Config.DomainEventEndpointMapping.EndpointPropertyName] = value;
            }
        }
        #endregion
    }
}
