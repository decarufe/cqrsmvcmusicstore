//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.261
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The DataBusConfig Configuration Section.
    /// </summary>
    public partial class DataBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the DataBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string DataBusConfigSectionName = "dataBusConfig";
        
        /// <summary>
        /// Gets the DataBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::CommandEndpoint.Config.DataBusConfig Instance
        {
            get
            {
                return ((global::CommandEndpoint.Config.DataBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::CommandEndpoint.Config.DataBusConfig.DataBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.DataBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.DataBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FileShareDataBus Property
        /// <summary>
        /// The XML name of the <see cref="FileShareDataBus"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string FileShareDataBusPropertyName = "fileShareDataBus";
        
        /// <summary>
        /// Gets or sets the FileShareDataBus.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FileShareDataBus.")]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::CommandEndpoint.Config.FileShareDataBus FileShareDataBus
        {
            get
            {
                return ((global::CommandEndpoint.Config.FileShareDataBus)(base[global::CommandEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.DataBusConfig.FileShareDataBusPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The CommandBusConfig Configuration Section.
    /// </summary>
    public partial class CommandBusConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the CommandBusConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandBusConfigSectionName = "commandBusConfig";
        
        /// <summary>
        /// Gets the CommandBusConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::CommandEndpoint.Config.CommandBusConfig Instance
        {
            get
            {
                return ((global::CommandEndpoint.Config.CommandBusConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::CommandEndpoint.Config.CommandBusConfig.CommandBusConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.CommandBusConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.CommandBusConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region CommandEndpointMappings Property
        /// <summary>
        /// The XML name of the <see cref="CommandEndpointMappings"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandEndpointMappingsPropertyName = "commandEndpointMappings";
        
        /// <summary>
        /// Gets or sets the CommandEndpointMappings.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The CommandEndpointMappings.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.CommandBusConfig.CommandEndpointMappingsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public global::CommandEndpoint.Config.CommandEndpointMappings CommandEndpointMappings
        {
            get
            {
                return ((global::CommandEndpoint.Config.CommandEndpointMappings)(base[global::CommandEndpoint.Config.CommandBusConfig.CommandEndpointMappingsPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.CommandBusConfig.CommandEndpointMappingsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The FileShareDataBus Configuration Element.
    /// </summary>
    public partial class FileShareDataBus : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Path.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.FileShareDataBus.PathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Path
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.FileShareDataBus.PathPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.FileShareDataBus.PathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The CommandEndpointMapping Configuration Element.
    /// </summary>
    public partial class CommandEndpointMapping : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Commands Property
        /// <summary>
        /// The XML name of the <see cref="Commands"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandsPropertyName = "commands";
        
        /// <summary>
        /// Gets or sets the Commands.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Commands.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.CommandEndpointMapping.CommandsPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Commands
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.CommandEndpointMapping.CommandsPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.CommandEndpointMapping.CommandsPropertyName] = value;
            }
        }
        #endregion
        
        #region Endpoint Property
        /// <summary>
        /// The XML name of the <see cref="Endpoint"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EndpointPropertyName = "endpoint";
        
        /// <summary>
        /// Gets or sets the Endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Endpoint.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.CommandEndpointMapping.EndpointPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Endpoint
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.CommandEndpointMapping.EndpointPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.CommandEndpointMapping.EndpointPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// A collection of CommandEndpointMapping instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CommandEndpoint.Config.CommandEndpointMapping), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap, AddItemName=global::CommandEndpoint.Config.CommandEndpointMappings.CommandEndpointMappingPropertyName)]
    public partial class CommandEndpointMappings : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CommandEndpointMappingPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::CommandEndpoint.Config.CommandEndpointMappings.CommandEndpointMappingPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CommandEndpoint.Config.CommandEndpointMappings.CommandEndpointMappingPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CommandEndpoint.Config.CommandEndpointMapping)(element)).Commands;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CommandEndpoint.Config.CommandEndpointMapping();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::CommandEndpoint.Config.CommandEndpointMapping this[int index]
        {
            get
            {
                return ((global::CommandEndpoint.Config.CommandEndpointMapping)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> with the specified key.
        /// </summary>
        /// <param name="commands">The key of the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::CommandEndpoint.Config.CommandEndpointMapping this[object commands]
        {
            get
            {
                return ((global::CommandEndpoint.Config.CommandEndpointMapping)(base.BaseGet(commands)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::CommandEndpoint.Config.CommandEndpointMapping add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::CommandEndpoint.Config.CommandEndpointMapping add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::CommandEndpoint.Config.CommandEndpointMapping GetItemAt(int index)
        {
            return ((global::CommandEndpoint.Config.CommandEndpointMapping)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> with the specified key.
        /// </summary>
        /// <param name="commands">The key of the <see cref="global::CommandEndpoint.Config.CommandEndpointMapping"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::CommandEndpoint.Config.CommandEndpointMapping GetItemByKey(string commands)
        {
            return ((global::CommandEndpoint.Config.CommandEndpointMapping)(base.BaseGet(((object)(commands)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The Certificates Configuration Element.
    /// </summary>
    public partial class Certificates : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ClaimsSigningCertificate Property
        /// <summary>
        /// The XML name of the <see cref="ClaimsSigningCertificate"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ClaimsSigningCertificatePropertyName = "claimsSigningCertificate";
        
        /// <summary>
        /// Gets or sets the ClaimsSigningCertificate.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ClaimsSigningCertificate.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.Certificates.ClaimsSigningCertificatePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::CommandEndpoint.Config.ClaimsSigningCertificate ClaimsSigningCertificate
        {
            get
            {
                return ((global::CommandEndpoint.Config.ClaimsSigningCertificate)(base[global::CommandEndpoint.Config.Certificates.ClaimsSigningCertificatePropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.Certificates.ClaimsSigningCertificatePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The ClaimsSigningCertificate Configuration Element.
    /// </summary>
    public partial class ClaimsSigningCertificate : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.ComponentModel.BrowsableAttribute(false)]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.ClaimsSigningCertificate.NamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public string Name
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.ClaimsSigningCertificate.NamePropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.ClaimsSigningCertificate.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CommandEndpoint.Config
{
    
    
    /// <summary>
    /// The SecurityConfig Configuration Section.
    /// </summary>
    public partial class SecurityConfig : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SecurityConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string SecurityConfigSectionName = "securityConfig";
        
        /// <summary>
        /// Gets the SecurityConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::CommandEndpoint.Config.SecurityConfig Instance
        {
            get
            {
                return ((global::CommandEndpoint.Config.SecurityConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::CommandEndpoint.Config.SecurityConfig.SecurityConfigSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.SecurityConfig.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CommandEndpoint.Config.SecurityConfig.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Certificates Property
        /// <summary>
        /// The XML name of the <see cref="Certificates"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string CertificatesPropertyName = "certificates";
        
        /// <summary>
        /// Gets or sets the Certificates.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Certificates.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CommandEndpoint.Config.SecurityConfig.CertificatesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::CommandEndpoint.Config.Certificates Certificates
        {
            get
            {
                return ((global::CommandEndpoint.Config.Certificates)(base[global::CommandEndpoint.Config.SecurityConfig.CertificatesPropertyName]));
            }
            set
            {
                base[global::CommandEndpoint.Config.SecurityConfig.CertificatesPropertyName] = value;
            }
        }
        #endregion
    }
}
